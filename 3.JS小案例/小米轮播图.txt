<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <style>
        ul {
            list-style: none
        }
        
        * {
            margin: 0;
            padding: 0;
        }
        
        div {
            position: relative;
            width: 1200px;
            height: 400px;
            margin: 50px auto;
            border: 1px solid red;
            overflow: hidden;
        }
        
        div li {
            width: 1200px;
            height: 400px;
            /*float: left;*/
            position: absolute;
        }
        
        div ul {
            width: 1200px;
        }
    </style>
</head>

<body>
    <div id="box">
        <ul>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
        </ul>
    </div>
    <script>
        var box = document.getElementById('box'); //获取盒子
        var lis = box.getElementsByTagName('li'); //获取li
        for (var i = 0; i < lis.length; i++) {
            lis[i].style.backgroundImage = 'url(images/' + (i + 1) + '.jpg)'; //设置背景
            lis[i].style.left = i * 240 + 'px';
            ///设置移入效果
            //要遍历没下标先设置
            lis[i].setAttribute('data-index', i);
            lis[i].onmouseover = function() {
                var index = this.getAttribute('data-index');
                for (var i = 0; i < lis.length; i++) {
                    if (i <= index) { ///当鼠标移入时这个索引是不会变的
                        move(lis[i], i * 100);
                    } else {
                        move(lis[i], i * 100 + 700)
                    }
                }
            };
        }
        ///设置移出

        box.onmouseout = function() {
            for (var i = 0; i < lis.length; i++) {
                move(lis[i], i * 240)
            }
        };

        function move(element, target) {
            // 我们将定时器的标识保存到元素的属性(自定义)中，好处：1 多个元素的属性无关 2 一个元素的属性可以多次访问
            clearInterval(element.timer); // 防止加速
            element.timer = setInterval(function() {
                // 1 获取元素当前位置
                var current = element.offsetLeft;
                // 2 设置步长公式：(目标位置 - 当前位置) / 10
                var step = (target - current) / 10;
                // 设置检测，根据step的正负设置不同的取整方式
                step = step > 0 ? Math.ceil(step) : Math.floor(step);

                // 3 套用运动公式：元素的位置(新) = 元素的位置(旧) + 步长
                current += step;
                // 4 将新的位置值设置给left属性
                element.style.left = current + 'px';

                // 5 清除定时器
                if (current === target) {
                    clearInterval(element.timer);
                }
            }, 20);
        }
    </script>
</body>

</html>